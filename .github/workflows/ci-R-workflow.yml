# GitHub Actions Workflow - Multi-platform with R support
name: Enhanced GitHub Actions CI with R Support

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    # execution  sur différentes plateformes (Ubuntu, Windows, MacOS)
    runs-on: ${{ matrix.os }}

    # Stratégie d'exécution --------------> avec une matrice pour tester différents systèmes
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release, Debug]

    steps:
    # Récupération du code source
    - uses: actions/checkout@v4

    # rep pour les fichiers de sortie de build
    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    # Installation des dépendances sur Linux et macOS (R, R packages, etc.)
    - name: Install dependencies (Linux & MacOS)
      if: ${{ runner.os != 'Windows' }}
      run: |
        sudo apt-get update || true  # Mise à jour des paquets
        sudo apt-get install -y r-base || true  # Installation de R
        sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev || true  # Dépendances pour les packages R
        Rscript -e "install.packages('devtools')" || true  # Installation de 'devtools' pour gérer les packages R

    # Installation des dépendances sur Windows (R, R packages, etc.)
    - name: Install dependencies (Windows)
      if: ${{ runner.os == 'Windows' }}
      run: |
        choco install r --version 4.0.5
        Rscript -e "install.packages('devtools')" || true  # Installation de 'devtools' pour gérer les packages R

    # Configuration de R (exemple ------> packages supplémentaires)
    - name: Configure R
      run: |
        Rscript -e "install.packages('ggplot2')" || true  # Exemple d'installation de package R (ggplot2)
        Rscript -e "install.packages('testthat')" || true  # Exemple pour les tests unitaires

    # Compilation du projet avec R (si applicable)
    - name: Build R project
      run: |
        Rscript -e "devtools::build()" || true  # Si tu utilises devtools pour construire ton projet

    # Exécution des tests avec R (utilisation de testthat)
    - name: Run Tests
      run: |
        Rscript -e "devtools::test()" || true  # Lancement des tests unitaires avec testthat

    # Génération de la couverture de code (si applicable)
    - name: Code Coverage (Optional)
      if: ${{ matrix.build_type == 'Debug' }}
      run: |
        Rscript -e "covr::codecov()" || true  # Utilisation de covr pour générer un rapport de couverture

    # Téléchargement des résultats des tests et de la couverture
    - name: Upload Test and Coverage Results
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: build-logs
        path: |
          ${{ github.workspace }}/tests/test_results  # Résultats des tests
          ${{ github.workspace }}/coverage.html  # Rapport de couverture (si généré)
